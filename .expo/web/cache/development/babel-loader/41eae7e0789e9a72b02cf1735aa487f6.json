{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Kaushic\\\\LetChat\\\\screens\\\\ChatScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport Fire from \"../Fire\";\n\nvar ChatScreen = function (_React$Component) {\n  _inherits(ChatScreen, _React$Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen() {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"user\",\n    get: function get() {\n      return {\n        _id: Fire.uid,\n        name: this.props.navigation.state.params.name\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Fire.get(function (message) {\n        return _this2.setState(function (previous) {\n          return {\n            messages: GiftedChat.append(previous.message, message)\n          };\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Fire.off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var chat = React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: Fire.send,\n        user: this.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      });\n\n      if (Platform.OS === \"android\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1\n          },\n          behavior: \"padding\",\n          keyboardVerticalOffset: 30,\n          enabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, chat);\n      }\n\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }\n      }, chat);\n    }\n  }]);\n\n  return ChatScreen;\n}(React.Component);\n\nexport { ChatScreen as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/Kaushic/LetChat/screens/ChatScreen.js"],"names":["React","Component","GiftedChat","Fire","ChatScreen","state","messages","_id","uid","name","props","navigation","params","get","message","setState","previous","append","off","chat","send","user","Platform","OS","flex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAOA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP;;IAEqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;SAIR,eAAW;AACT,aAAO;AACLC,QAAAA,GAAG,EAAEJ,IAAI,CAACK,GADL;AAELC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,UAAX,CAAsBN,KAAtB,CAA4BO,MAA5B,CAAmCH;AAFpC,OAAP;AAID;;;WAED,6BAAoB;AAAA;;AAClBN,MAAAA,IAAI,CAACU,GAAL,CAAS,UAACC,OAAD;AAAA,eACP,MAAI,CAACC,QAAL,CAAc,UAACC,QAAD;AAAA,iBAAe;AAC3BV,YAAAA,QAAQ,EAAEJ,UAAU,CAACe,MAAX,CAAkBD,QAAQ,CAACF,OAA3B,EAAoCA,OAApC;AADiB,WAAf;AAAA,SAAd,CADO;AAAA,OAAT;AAKD;;;WAED,gCAAuB;AACrBX,MAAAA,IAAI,CAACe,GAAL;AACD;;;WACD,kBAAS;AACP,UAAMC,IAAI,GACR,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWC,QADvB;AAEE,QAAA,MAAM,EAAEH,IAAI,CAACiB,IAFf;AAGE,QAAA,IAAI,EAAE,KAAKC,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAQA,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,eACE,oBAAC,oBAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADT;AAEE,UAAA,QAAQ,EAAC,SAFX;AAGE,UAAA,sBAAsB,EAAE,EAH1B;AAIE,UAAA,OAAO,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMGL,IANH,CADF;AAUD;;AACD,aAAO,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCL,IAAnC,CAAP;AACD;;;;EA7CqCnB,KAAK,CAACC,S;;SAAzBG,U","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { GiftedChat } from \"react-native-gifted-chat\";\r\nimport Fire from \"../Fire\";\r\n\r\nexport default class ChatScreen extends React.Component {\r\n  state = {\r\n    messages: [],\r\n  };\r\n\r\n  get user() {\r\n    return {\r\n      _id: Fire.uid,\r\n      name: this.props.navigation.state.params.name,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Fire.get((message) =>\r\n      this.setState((previous) => ({\r\n        messages: GiftedChat.append(previous.message, message),\r\n      }))\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Fire.off();\r\n  }\r\n  render() {\r\n    const chat = (\r\n      <GiftedChat\r\n        messages={this.state.messages}\r\n        onSend={Fire.send}\r\n        user={this.user}\r\n      />\r\n    );\r\n\r\n    if (Platform.OS === \"android\") {\r\n      return (\r\n        <KeyboardAvoidingView\r\n          style={{ flex: 1 }}\r\n          behavior=\"padding\"\r\n          keyboardVerticalOffset={30}\r\n          enabled\r\n        >\r\n          {chat}\r\n        </KeyboardAvoidingView>\r\n      );\r\n    }\r\n    return <SafeAreaView style={{ flex: 1 }}>{chat}</SafeAreaView>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}